/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import type {
  BadRequestResponse,
  BotListRequest,
  GetBotlist200,
  InternalErrorResponse,
  NotAcceptableResponse,
  PaymentRequiredResponse,
  PostBotlistAdd200,
  PostBotlistExclude200,
  PutBotlist200,
  UnauthorizedResponse,
} from '../../models';

import { fetcher } from '../../../utils/fetcher';

/**
 * Retrieve rows from the bot list
 * @summary Retrieve rows from the bot list
 */
export type getBotlistResponse200 = {
  data: GetBotlist200;
  status: 200;
};

export type getBotlistResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type getBotlistResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type getBotlistResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type getBotlistResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type getBotlistResponseComposite =
  | getBotlistResponse200
  | getBotlistResponse400
  | getBotlistResponse401
  | getBotlistResponse402
  | getBotlistResponse500;

export type getBotlistResponse = getBotlistResponseComposite & {
  headers: Headers;
};

export const getGetBotlistUrl = () => {
  return `https://admin-api.docs.keitaro.io/botlist`;
};

export const getBotlist = async (
  options?: RequestInit,
): Promise<getBotlistResponse> => {
  return fetcher<getBotlistResponse>(getGetBotlistUrl(), {
    ...options,
    method: 'GET',
  });
};

/**
 * Update the bot list
 * @summary Update the bot list
 */
export type putBotlistResponse200 = {
  data: PutBotlist200;
  status: 200;
};

export type putBotlistResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type putBotlistResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type putBotlistResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type putBotlistResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type putBotlistResponseComposite =
  | putBotlistResponse200
  | putBotlistResponse400
  | putBotlistResponse401
  | putBotlistResponse402
  | putBotlistResponse500;

export type putBotlistResponse = putBotlistResponseComposite & {
  headers: Headers;
};

export const getPutBotlistUrl = () => {
  return `https://admin-api.docs.keitaro.io/botlist`;
};

export const putBotlist = async (
  botListRequest: BotListRequest,
  options?: RequestInit,
): Promise<putBotlistResponse> => {
  return fetcher<putBotlistResponse>(getPutBotlistUrl(), {
    ...options,
    method: 'PUT',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(botListRequest),
  });
};

/**
 * Clear the bot list
 * @summary Clear the bot list
 */
export type deleteBotlistResponse200 = {
  data: void;
  status: 200;
};

export type deleteBotlistResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type deleteBotlistResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type deleteBotlistResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type deleteBotlistResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type deleteBotlistResponseComposite =
  | deleteBotlistResponse200
  | deleteBotlistResponse400
  | deleteBotlistResponse401
  | deleteBotlistResponse402
  | deleteBotlistResponse500;

export type deleteBotlistResponse = deleteBotlistResponseComposite & {
  headers: Headers;
};

export const getDeleteBotlistUrl = () => {
  return `https://admin-api.docs.keitaro.io/botlist`;
};

export const deleteBotlist = async (
  options?: RequestInit,
): Promise<deleteBotlistResponse> => {
  return fetcher<deleteBotlistResponse>(getDeleteBotlistUrl(), {
    ...options,
    method: 'DELETE',
  });
};

/**
 * Add IPs to the bot list
 * @summary Add IPs to the bot list
 */
export type postBotlistAddResponse200 = {
  data: PostBotlistAdd200;
  status: 200;
};

export type postBotlistAddResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type postBotlistAddResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type postBotlistAddResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type postBotlistAddResponse406 = {
  data: NotAcceptableResponse;
  status: 406;
};

export type postBotlistAddResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type postBotlistAddResponseComposite =
  | postBotlistAddResponse200
  | postBotlistAddResponse400
  | postBotlistAddResponse401
  | postBotlistAddResponse402
  | postBotlistAddResponse406
  | postBotlistAddResponse500;

export type postBotlistAddResponse = postBotlistAddResponseComposite & {
  headers: Headers;
};

export const getPostBotlistAddUrl = () => {
  return `https://admin-api.docs.keitaro.io/botlist/add`;
};

export const postBotlistAdd = async (
  botListRequest: BotListRequest,
  options?: RequestInit,
): Promise<postBotlistAddResponse> => {
  return fetcher<postBotlistAddResponse>(getPostBotlistAddUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(botListRequest),
  });
};

/**
 * Remove IPs from the bot list
 * @summary Remove IPs from the bot list
 */
export type postBotlistExcludeResponse200 = {
  data: PostBotlistExclude200;
  status: 200;
};

export type postBotlistExcludeResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type postBotlistExcludeResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type postBotlistExcludeResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type postBotlistExcludeResponse406 = {
  data: NotAcceptableResponse;
  status: 406;
};

export type postBotlistExcludeResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type postBotlistExcludeResponseComposite =
  | postBotlistExcludeResponse200
  | postBotlistExcludeResponse400
  | postBotlistExcludeResponse401
  | postBotlistExcludeResponse402
  | postBotlistExcludeResponse406
  | postBotlistExcludeResponse500;

export type postBotlistExcludeResponse = postBotlistExcludeResponseComposite & {
  headers: Headers;
};

export const getPostBotlistExcludeUrl = () => {
  return `https://admin-api.docs.keitaro.io/botlist/exclude`;
};

export const postBotlistExclude = async (
  botListRequest: BotListRequest,
  options?: RequestInit,
): Promise<postBotlistExcludeResponse> => {
  return fetcher<postBotlistExcludeResponse>(getPostBotlistExcludeUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(botListRequest),
  });
};
