/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import type {
  BadRequestResponse,
  CleanRequest,
  InternalErrorResponse,
  NotAcceptableResponse,
  PaymentRequiredResponse,
  Success,
  UnauthorizedResponse,
} from '../../models';

import { fetcher } from '../../../utils/fetcher';

/**
 * Clean stats
 * @summary Clean stats
 */
export type postClicksCleanResponse200 = {
  data: Success;
  status: 200;
};

export type postClicksCleanResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type postClicksCleanResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type postClicksCleanResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type postClicksCleanResponse406 = {
  data: NotAcceptableResponse;
  status: 406;
};

export type postClicksCleanResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type postClicksCleanResponseComposite =
  | postClicksCleanResponse200
  | postClicksCleanResponse400
  | postClicksCleanResponse401
  | postClicksCleanResponse402
  | postClicksCleanResponse406
  | postClicksCleanResponse500;

export type postClicksCleanResponse = postClicksCleanResponseComposite & {
  headers: Headers;
};

export const getPostClicksCleanUrl = () => {
  return `https://admin-api.docs.keitaro.io/clicks/clean`;
};

export const postClicksClean = async (
  cleanRequest: CleanRequest,
  options?: RequestInit,
): Promise<postClicksCleanResponse> => {
  return fetcher<postClicksCleanResponse>(getPostClicksCleanUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(cleanRequest),
  });
};
