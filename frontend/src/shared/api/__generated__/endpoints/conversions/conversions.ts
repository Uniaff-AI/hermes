/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import type {
  BadRequestResponse,
  ConversionRequest,
  InternalErrorResponse,
  NotAcceptableResponse,
  PaymentRequiredResponse,
  Report,
  UnauthorizedResponse,
} from '../../models';

import { fetcher } from '../../../utils/fetcher';

/**
 * Returns conversions
 * @summary Get conversions
 */
export type postConversionsLogResponse200 = {
  data: Report;
  status: 200;
};

export type postConversionsLogResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type postConversionsLogResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type postConversionsLogResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type postConversionsLogResponse406 = {
  data: NotAcceptableResponse;
  status: 406;
};

export type postConversionsLogResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type postConversionsLogResponseComposite =
  | postConversionsLogResponse200
  | postConversionsLogResponse400
  | postConversionsLogResponse401
  | postConversionsLogResponse402
  | postConversionsLogResponse406
  | postConversionsLogResponse500;

export type postConversionsLogResponse = postConversionsLogResponseComposite & {
  headers: Headers;
};

export const getPostConversionsLogUrl = () => {
  return `https://admin-api.docs.keitaro.io/conversions/log`;
};

export const postConversionsLog = async (
  conversionRequest: ConversionRequest,
  options?: RequestInit,
): Promise<postConversionsLogResponse> => {
  return fetcher<postConversionsLogResponse>(getPostConversionsLogUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(conversionRequest),
  });
};
