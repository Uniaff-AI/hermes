/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import { z as zod } from 'zod';

import { fetcher } from '../../../utils/fetcher';

/**
 * Returns list of the groups
 * @summary Get groups
 */
export const getGroupsQueryTypeDefault = 'campaigns';

export const getGroupsQueryParams = zod.object({
  type: zod
    .enum(['campaigns', 'offers', 'landings', 'domains'])
    .describe('Group type'),
});

export const getGroupsResponseItem = zod.object({
  id: zod.number().optional(),
  name: zod.string().optional(),
  position: zod.number().optional(),
  type: zod.string().optional(),
});
export const getGroupsResponse = zod.array(getGroupsResponseItem);

/**
 * Creates group.
 * @summary Create croup
 */
export const postGroupsBody = zod
  .object({
    name: zod.string().optional().describe('Group name'),
    type: zod
      .enum(['campaigns', 'offers', 'landings', 'domains'])
      .optional()
      .describe('Group type'),
  })
  .and(zod.any());

export const postGroupsResponse = zod.object({
  id: zod.number().optional(),
  name: zod.string().optional(),
  position: zod.number().optional(),
  type: zod.string().optional(),
});

/**
 * Update a Group
 * @summary Update Group
 */
export const putGroupsIdParams = zod.object({
  id: zod.number().describe('Group ID'),
});

export const putGroupsIdBody = zod.object({
  name: zod.string().optional().describe('Group name'),
  type: zod
    .enum(['campaigns', 'offers', 'landings', 'domains'])
    .optional()
    .describe('Group type'),
});

export const putGroupsIdResponse = zod.object({
  id: zod.number().optional(),
  name: zod.string().optional(),
  position: zod.number().optional(),
  type: zod.string().optional(),
});

/**
 * Delete a Group
 * @summary Delete Group
 */
export const deleteGroupsIdDeleteParams = zod.object({
  id: zod.number().describe('Group ID'),
});

export const deleteGroupsIdDeleteResponse = zod.object({
  id: zod.number().optional(),
  name: zod.string().optional(),
  position: zod.number().optional(),
  type: zod.string().optional(),
});
