/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import { z as zod } from 'zod';

import { fetcher } from '../../../utils/fetcher';

/**
 * Returns clicks information.
 * @summary Get clicks
 */
export const postClicksLogBody = zod.object({
  range: zod
    .object({
      from: zod.string().optional().describe("Start Date, e.g., '2017-09-10'"),
      to: zod.string().optional().describe("End Date, e.g., '2017-09-10'"),
      timezone: zod.string().optional().describe('E.g., Europe/Madrid'),
      interval: zod
        .any()
        .optional()
        .describe(
          'One of the intervals can be used: today, yesterday, 7_days_ago, first_day_of_this_week, 1_month_ago, first_day_of_this_month, 1_year_ago, first_day_of_this_year, all_time\n'
        ),
    })
    .optional(),
  limit: zod
    .number()
    .optional()
    .describe(
      "Clicks Request Limit. Either 'limit' or 'range' Parameters are a Must."
    ),
  offset: zod.number().optional().describe('Offset rows'),
  columns: zod.array(zod.string()).optional(),
  filters: zod
    .array(
      zod.object({
        name: zod.string().describe('Name of the field'),
        operator: zod
          .string()
          .describe(
            'One of the available operators (<a href=\"#operators\">operators</a>)\n'
          ),
        expression: zod
          .string()
          .or(zod.number())
          .optional()
          .describe('Expression for the filter'),
      })
    )
    .optional(),
  sort: zod
    .array(
      zod.object({
        name: zod.string().describe('Column or metric name'),
        order: zod.enum(['ASC', 'DESC']).describe('Order'),
      })
    )
    .optional(),
});

export const postClicksLogResponse = zod.object({
  rows: zod.array(zod.string()).optional(),
  total: zod.number().optional(),
  meta: zod.array(zod.string()).optional(),
});

/**
 * Updates costs.
 * @summary Update costs in bulk
 */
export const postClicksUpdateCostsBody = zod.object({
  campaign_ids: zod.array(zod.number()).describe('Array of campaigns IDs'),
  costs: zod.array(
    zod.object({
      start_date: zod
        .string()
        .describe('Start date and time, e.g., ‚Äú2017-09-10 20:10‚Äù'),
      end_date: zod
        .string()
        .describe('End date and time, e.g., ‚Äú2017-09-10 20:10‚Äù'),
      cost: zod.number().describe('Cost value, e.g., 19.22'),
      filters: zod
        .object({
          keyword: zod.string().optional(),
          external_id: zod.string().optional(),
          creative_id: zod.string().optional(),
          ad_campaign_id: zod.string().optional(),
          source: zod.string().optional(),
          sub_id_1: zod.string().optional(),
          sub_id_2: zod.string().optional(),
          sub_id_3: zod.string().optional(),
          sub_id_4: zod.string().optional(),
          sub_id_5: zod.string().optional(),
          sub_id_6: zod.string().optional(),
          sub_id_7: zod.string().optional(),
          sub_id_8: zod.string().optional(),
          sub_id_9: zod.string().optional(),
          sub_id_10: zod.string().optional(),
          sub_id_11: zod.string().optional(),
          sub_id_12: zod.string().optional(),
          sub_id_13: zod.string().optional(),
          sub_id_14: zod.string().optional(),
          sub_id_15: zod.string().optional(),
          sub_id_16: zod.string().optional(),
          sub_id_17: zod.string().optional(),
          sub_id_18: zod.string().optional(),
          sub_id_19: zod.string().optional(),
          sub_id_20: zod.string().optional(),
          sub_id_21: zod.string().optional(),
          sub_id_22: zod.string().optional(),
          sub_id_23: zod.string().optional(),
          sub_id_24: zod.string().optional(),
          sub_id_25: zod.string().optional(),
          sub_id_26: zod.string().optional(),
          sub_id_27: zod.string().optional(),
          sub_id_28: zod.string().optional(),
          sub_id_29: zod.string().optional(),
          sub_id_30: zod.string().optional(),
        })
        .optional()
        .describe(
          'Send a key-value object to apply filters to clicks. For example, {\"sub_id_1\": \"1,2,3\", \"source\": \"site.ru\"}.'
        ),
    })
  ),
  timezone: zod.string().optional().describe('Timezone, e.g., Europe/Madrid'),
  currency: zod.string().optional().describe('Currency, e.g., EUR'),
  only_campaign_uniques: zod
    .number()
    .optional()
    .describe('Apply costs only to unique clicks (1 or 0)'),
});

export const postClicksUpdateCostsResponse = zod.object({
  success: zod.boolean().optional(),
});
