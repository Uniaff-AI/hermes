/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import type {
  BadRequestResponse,
  ClickRequest,
  ClicksUpdateCostsRequest,
  InternalErrorResponse,
  NotAcceptableResponse,
  NotFoundResponse,
  PaymentRequiredResponse,
  PostClicksUpdateCosts200,
  Report,
  UnauthorizedResponse,
} from '../../models';

import { fetcher } from '../../../utils/fetcher';

/**
 * Returns clicks information.
 * @summary Get clicks
 */
export type postClicksLogResponse200 = {
  data: Report;
  status: 200;
};

export type postClicksLogResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type postClicksLogResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type postClicksLogResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type postClicksLogResponse406 = {
  data: NotAcceptableResponse;
  status: 406;
};

export type postClicksLogResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type postClicksLogResponseComposite =
  | postClicksLogResponse200
  | postClicksLogResponse400
  | postClicksLogResponse401
  | postClicksLogResponse402
  | postClicksLogResponse406
  | postClicksLogResponse500;

export type postClicksLogResponse = postClicksLogResponseComposite & {
  headers: Headers;
};

export const getPostClicksLogUrl = () => {
  return `https://admin-api.docs.keitaro.io/clicks/log`;
};

export const postClicksLog = async (
  clickRequest: ClickRequest,
  options?: RequestInit,
): Promise<postClicksLogResponse> => {
  return fetcher<postClicksLogResponseComposite>(getPostClicksLogUrl(), {
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(clickRequest),
  }) as Promise<postClicksLogResponse>;
};

/**
 * Updates costs.
 * @summary Update costs in bulk
 */
export type postClicksUpdateCostsResponse200 = {
  data: PostClicksUpdateCosts200;
  status: 200;
};

export type postClicksUpdateCostsResponse400 = {
  data: BadRequestResponse;
  status: 400;
};

export type postClicksUpdateCostsResponse401 = {
  data: UnauthorizedResponse;
  status: 401;
};

export type postClicksUpdateCostsResponse402 = {
  data: PaymentRequiredResponse;
  status: 402;
};

export type postClicksUpdateCostsResponse404 = {
  data: NotFoundResponse;
  status: 404;
};

export type postClicksUpdateCostsResponse406 = {
  data: NotAcceptableResponse;
  status: 406;
};

export type postClicksUpdateCostsResponse500 = {
  data: InternalErrorResponse;
  status: 500;
};

export type postClicksUpdateCostsResponseComposite =
  | postClicksUpdateCostsResponse200
  | postClicksUpdateCostsResponse400
  | postClicksUpdateCostsResponse401
  | postClicksUpdateCostsResponse402
  | postClicksUpdateCostsResponse404
  | postClicksUpdateCostsResponse406
  | postClicksUpdateCostsResponse500;

export type postClicksUpdateCostsResponse =
  postClicksUpdateCostsResponseComposite & {
    headers: Headers;
  };

export const getPostClicksUpdateCostsUrl = () => {
  return `https://admin-api.docs.keitaro.io/clicks/update_costs`;
};

export const postClicksUpdateCosts = async (
  clicksUpdateCostsRequest: ClicksUpdateCostsRequest,
  options?: RequestInit,
): Promise<postClicksUpdateCostsResponse> => {
  return fetcher<postClicksUpdateCostsResponseComposite>(
    getPostClicksUpdateCostsUrl(),
    {
      ...options,
      method: 'POST',
      headers: { 'Content-Type': 'application/json', ...options?.headers },
      body: JSON.stringify(clicksUpdateCostsRequest),
    },
  ) as Promise<postClicksUpdateCostsResponse>;
};
