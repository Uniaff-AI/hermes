/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Keitaro Admin API
 * OpenAPI spec version: v1
 */
import { z as zod } from 'zod';

import { fetcher } from '../../../utils/fetcher';

/**
 * Returns the campaigns
 * @summary Get all campaigns
 */
export const getCampaignsQueryParams = zod.object({
  offset: zod
    .number()
    .optional()
    .describe(
      'The number of campaigns to skip before starting to collect the result set.'
    ),
  limit: zod
    .number()
    .optional()
    .describe('The numbers of campaigns to return.'),
});

export const getCampaignsResponseTypeDefault = 'position';
export const getCampaignsResponseCookiesTtlDefault = 24;
export const getCampaignsResponseStateDefault = 'active';
export const getCampaignsResponseCostTypeDefault = 'CPC';
export const getCampaignsResponseCostValueDefault = 0;
export const getCampaignsResponseCostAutoDefault = false;

export const getCampaignsResponseItem = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(getCampaignsResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod.number().default(getCampaignsResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(getCampaignsResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(getCampaignsResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});
export const getCampaignsResponse = zod.array(getCampaignsResponseItem);

/**
 * Creates campaign
 * @summary Create campaign
 */
export const postCampaignsBodyTypeDefault = 'position';
export const postCampaignsBodyCookiesTtlDefault = 24;
export const postCampaignsBodyStateDefault = 'active';
export const postCampaignsBodyCostTypeDefault = 'CPC';
export const postCampaignsBodyCostAutoDefault = false;

export const postCampaignsBody = zod
  .object({
    alias: zod
      .string()
      .optional()
      .describe('Campaign Alias which is Used in URL http://domain.com/ALIAS'),
    type: zod
      .enum(['position', 'weight'])
      .default(postCampaignsBodyTypeDefault)
      .describe('Flow  Rotation Type'),
    name: zod.string().optional().describe('Campaign Name'),
    cookies_ttl: zod
      .number()
      .default(postCampaignsBodyCookiesTtlDefault)
      .describe('When the Click Gets Unique Status Again, in Hours'),
    state: zod
      .enum(['active', 'disabled', 'deleted'])
      .default(postCampaignsBodyStateDefault)
      .describe('Campaign State'),
    cost_type: zod
      .enum(['CPC', 'CPUC', 'CPM'])
      .default(postCampaignsBodyCostTypeDefault)
      .describe('Cost Type'),
    cost_value: zod.number().optional().describe('Cost Value'),
    cost_currency: zod
      .string()
      .optional()
      .describe(
        "Currency Value EUR/USD/RUB/UAH/GBP. Default Value is Taken from the Tracker's Settings."
      ),
    cost_auto: zod
      .boolean()
      .optional()
      .describe('Enable Automatic Costs (0/1)'),
    group_id: zod.string().optional().describe('Campaign Group ID'),
    bind_visitors: zod
      .string()
      .optional()
      .describe(
        'Bind Visitors Feature (null - disabled/ s - only to streams/ sl - to streams and LPs/ slo ‚Äî to streams, LPs and offers)'
      ),
    traffic_source_id: zod.number().optional().describe('Traffic source ID'),
    parameters: zod
      .object({
        keyword: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        cost: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        currency: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        external_id: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        creative_id: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        ad_campaign_id: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        source: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_1: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_2: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_3: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_4: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_5: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_6: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_7: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_8: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_9: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_10: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_11: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_12: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_13: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_14: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
        sub_id_15: zod
          .object({
            name: zod.string().optional(),
            placeholder: zod.string().optional(),
            alias: zod.string().optional(),
          })
          .optional(),
      })
      .optional(),
    token: zod
      .string()
      .optional()
      .describe('Token to gain access to Click API'),
    domain_id: zod.number().optional().describe('Domain ID'),
    postbacks: zod
      .array(
        zod.object({
          campaign_id: zod.number().optional().describe('Campaign ID'),
          id: zod.number().optional().describe('Postback ID'),
          method: zod
            .enum(['GET', 'POST'])
            .optional()
            .describe('Request method'),
          statuses: zod
            .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
            .optional()
            .describe('Conversion status'),
          url: zod.string().optional().describe('Postback URL'),
        })
      )
      .optional()
      .describe('Campaign S2S postback'),
    notes: zod.string().optional().describe('Notes for the campaign'),
  })
  .and(zod.any());

export const postCampaignsResponseTypeDefault = 'position';
export const postCampaignsResponseCookiesTtlDefault = 24;
export const postCampaignsResponseStateDefault = 'active';
export const postCampaignsResponseCostTypeDefault = 'CPC';
export const postCampaignsResponseCostValueDefault = 0;
export const postCampaignsResponseCostAutoDefault = false;

export const postCampaignsResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(postCampaignsResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod.number().default(postCampaignsResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(postCampaignsResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(postCampaignsResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * Returns campaign information
 * @summary Get campaign
 */
export const getCampaignsIdParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const getCampaignsIdResponseTypeDefault = 'position';
export const getCampaignsIdResponseCookiesTtlDefault = 24;
export const getCampaignsIdResponseStateDefault = 'active';
export const getCampaignsIdResponseCostTypeDefault = 'CPC';
export const getCampaignsIdResponseCostValueDefault = 0;
export const getCampaignsIdResponseCostAutoDefault = false;

export const getCampaignsIdResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(getCampaignsIdResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod.number().default(getCampaignsIdResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(getCampaignsIdResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(getCampaignsIdResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * Update a campaign
 * @summary Update campaign
 */
export const putCampaignsIdParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const putCampaignsIdBodyTypeDefault = 'position';
export const putCampaignsIdBodyCookiesTtlDefault = 24;
export const putCampaignsIdBodyStateDefault = 'active';
export const putCampaignsIdBodyCostTypeDefault = 'CPC';
export const putCampaignsIdBodyCostAutoDefault = false;

export const putCampaignsIdBody = zod.object({
  alias: zod
    .string()
    .optional()
    .describe('Campaign Alias which is Used in URL http://domain.com/ALIAS'),
  type: zod
    .enum(['position', 'weight'])
    .default(putCampaignsIdBodyTypeDefault)
    .describe('Flow  Rotation Type'),
  name: zod.string().optional().describe('Campaign Name'),
  cookies_ttl: zod
    .number()
    .default(putCampaignsIdBodyCookiesTtlDefault)
    .describe('When the Click Gets Unique Status Again, in Hours'),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(putCampaignsIdBodyStateDefault)
    .describe('Campaign State'),
  cost_type: zod
    .enum(['CPC', 'CPUC', 'CPM'])
    .default(putCampaignsIdBodyCostTypeDefault)
    .describe('Cost Type'),
  cost_value: zod.number().optional().describe('Cost Value'),
  cost_currency: zod
    .string()
    .optional()
    .describe(
      "Currency Value EUR/USD/RUB/UAH/GBP. Default Value is Taken from the Tracker's Settings."
    ),
  cost_auto: zod.boolean().optional().describe('Enable Automatic Costs (0/1)'),
  group_id: zod.string().optional().describe('Campaign Group ID'),
  bind_visitors: zod
    .string()
    .optional()
    .describe(
      'Bind Visitors Feature (null - disabled/ s - only to streams/ sl - to streams and LPs/ slo ‚Äî to streams, LPs and offers)'
    ),
  traffic_source_id: zod.number().optional().describe('Traffic source ID'),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  token: zod.string().optional().describe('Token to gain access to Click API'),
  domain_id: zod.number().optional().describe('Domain ID'),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional()
    .describe('Campaign S2S postback'),
  notes: zod.string().optional().describe('Notes for the campaign'),
});

export const putCampaignsIdResponseTypeDefault = 'position';
export const putCampaignsIdResponseCookiesTtlDefault = 24;
export const putCampaignsIdResponseStateDefault = 'active';
export const putCampaignsIdResponseCostTypeDefault = 'CPC';
export const putCampaignsIdResponseCostValueDefault = 0;
export const putCampaignsIdResponseCostAutoDefault = false;

export const putCampaignsIdResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(putCampaignsIdResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod.number().default(putCampaignsIdResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(putCampaignsIdResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(putCampaignsIdResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * Moves campaign to archive
 * @summary Move campaign to archive
 */
export const deleteCampaignsIdParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

/**
 * Clone a Campaign
 * @summary Clone Campaign
 */
export const postCampaignsIdCloneParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const postCampaignsIdCloneResponseTypeDefault = 'position';
export const postCampaignsIdCloneResponseCookiesTtlDefault = 24;
export const postCampaignsIdCloneResponseStateDefault = 'active';
export const postCampaignsIdCloneResponseCostTypeDefault = 'CPC';
export const postCampaignsIdCloneResponseCostValueDefault = 0;
export const postCampaignsIdCloneResponseCostAutoDefault = false;

export const postCampaignsIdCloneResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(postCampaignsIdCloneResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod
    .number()
    .default(postCampaignsIdCloneResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(postCampaignsIdCloneResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(postCampaignsIdCloneResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * Disable a Campaign
 * @summary Disable Campaign
 */
export const postCampaignsIdDisableParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const postCampaignsIdDisableResponseTypeDefault = 'position';
export const postCampaignsIdDisableResponseCookiesTtlDefault = 24;
export const postCampaignsIdDisableResponseStateDefault = 'active';
export const postCampaignsIdDisableResponseCostTypeDefault = 'CPC';
export const postCampaignsIdDisableResponseCostValueDefault = 0;
export const postCampaignsIdDisableResponseCostAutoDefault = false;

export const postCampaignsIdDisableResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(postCampaignsIdDisableResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod
    .number()
    .default(postCampaignsIdDisableResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(postCampaignsIdDisableResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(postCampaignsIdDisableResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * Enable a Campaign
 * @summary Enable Campaign
 */
export const postCampaignsIdEnableParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const postCampaignsIdEnableResponseTypeDefault = 'position';
export const postCampaignsIdEnableResponseCookiesTtlDefault = 24;
export const postCampaignsIdEnableResponseStateDefault = 'active';
export const postCampaignsIdEnableResponseCostTypeDefault = 'CPC';
export const postCampaignsIdEnableResponseCostValueDefault = 0;
export const postCampaignsIdEnableResponseCostAutoDefault = false;

export const postCampaignsIdEnableResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(postCampaignsIdEnableResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod
    .number()
    .default(postCampaignsIdEnableResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(postCampaignsIdEnableResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(postCampaignsIdEnableResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * Restore a Campaign
 * @summary Restore Campaign
 */
export const postCampaignsIdRestoreParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const postCampaignsIdRestoreResponseTypeDefault = 'position';
export const postCampaignsIdRestoreResponseCookiesTtlDefault = 24;
export const postCampaignsIdRestoreResponseStateDefault = 'active';
export const postCampaignsIdRestoreResponseCostTypeDefault = 'CPC';
export const postCampaignsIdRestoreResponseCostValueDefault = 0;
export const postCampaignsIdRestoreResponseCostAutoDefault = false;

export const postCampaignsIdRestoreResponse = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(postCampaignsIdRestoreResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod
    .number()
    .default(postCampaignsIdRestoreResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(postCampaignsIdRestoreResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(postCampaignsIdRestoreResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});

/**
 * <p>Updates campaign costs.</p> <b>IMPORTANT!</b> That actions is VERY SLOW. Use <a href="#tag/Clicks/paths/~1clicks~1update_costs/post">Update costs in bulk</a> instead</p>
 * @summary Update costs for campaign
 */
export const postCampaignsIdUpdateCostsParams = zod.object({
  id: zod.number().describe('Campaign ID'),
});

export const postCampaignsIdUpdateCostsBody = zod.object({
  start_date: zod
    .string()
    .describe('Start date and time. For example, \"2017-09-10 20:10\"'),
  end_date: zod
    .string()
    .describe('End date and time. For example, \"2017-09-10 20:10\"'),
  timezone: zod
    .string()
    .describe('Timezone for the time range. For example, \"Europe/Madrid\".'),
  cost: zod
    .string()
    .describe('Cost for the time range. For example, \"19.22\".'),
  currency: zod.string().describe('Currency of cost. For example \"EUR\".'),
  only_campaign_uniques: zod
    .boolean()
    .optional()
    .describe('Apply new costs to unique clicks only.'),
  filters: zod
    .object({
      keyword: zod.string().optional(),
      external_id: zod.string().optional(),
      creative_id: zod.string().optional(),
      ad_campaign_id: zod.string().optional(),
      source: zod.string().optional(),
      sub_id_1: zod.string().optional(),
      sub_id_2: zod.string().optional(),
      sub_id_3: zod.string().optional(),
      sub_id_4: zod.string().optional(),
      sub_id_5: zod.string().optional(),
      sub_id_6: zod.string().optional(),
      sub_id_7: zod.string().optional(),
      sub_id_8: zod.string().optional(),
      sub_id_9: zod.string().optional(),
      sub_id_10: zod.string().optional(),
      sub_id_11: zod.string().optional(),
      sub_id_12: zod.string().optional(),
      sub_id_13: zod.string().optional(),
      sub_id_14: zod.string().optional(),
      sub_id_15: zod.string().optional(),
      sub_id_16: zod.string().optional(),
      sub_id_17: zod.string().optional(),
      sub_id_18: zod.string().optional(),
      sub_id_19: zod.string().optional(),
      sub_id_20: zod.string().optional(),
      sub_id_21: zod.string().optional(),
      sub_id_22: zod.string().optional(),
      sub_id_23: zod.string().optional(),
      sub_id_24: zod.string().optional(),
      sub_id_25: zod.string().optional(),
      sub_id_26: zod.string().optional(),
      sub_id_27: zod.string().optional(),
      sub_id_28: zod.string().optional(),
      sub_id_29: zod.string().optional(),
      sub_id_30: zod.string().optional(),
    })
    .optional()
    .describe(
      'Send a key-value object to apply filters to clicks. For example, {\"sub_id_1\": \"1,2,3\", \"source\": \"site.ru\"}.'
    ),
});

/**
 * Get deleted campaigns
 * @summary Get deleted campaigns
 */
export const getCampaignsDeletedResponseTypeDefault = 'position';
export const getCampaignsDeletedResponseCookiesTtlDefault = 24;
export const getCampaignsDeletedResponseStateDefault = 'active';
export const getCampaignsDeletedResponseCostTypeDefault = 'CPC';
export const getCampaignsDeletedResponseCostValueDefault = 0;
export const getCampaignsDeletedResponseCostAutoDefault = false;

export const getCampaignsDeletedResponseItem = zod.object({
  id: zod.number().optional(),
  alias: zod
    .string()
    .optional()
    .describe('Leave empty to generate automatically.'),
  type: zod
    .enum(['position', 'weight'])
    .default(getCampaignsDeletedResponseTypeDefault)
    .describe("Set 'weight' to enable split-testing the flows."),
  name: zod.string().optional(),
  cookies_ttl: zod
    .number()
    .default(getCampaignsDeletedResponseCookiesTtlDefault),
  position: zod.number().optional(),
  state: zod
    .enum(['active', 'disabled', 'deleted'])
    .default(getCampaignsDeletedResponseStateDefault),
  cost_type: zod
    .enum(['CPM', 'CPC', 'CPUC', 'RevShare', 'CPA', 'CPS', 'CPUV', 'CPV'])
    .default(getCampaignsDeletedResponseCostTypeDefault),
  cost_value: zod.number().optional(),
  cost_currency: zod
    .string()
    .optional()
    .describe('Leave empty to use tracker currency'),
  group_id: zod.number().optional(),
  bind_visitors: zod
    .enum(['s', 'sl', 'slo'])
    .optional()
    .describe(
      "'s' for flows. 'sl' for flows and landing pages. 'slo' for flows, landing pages and offers."
    ),
  traffic_source_id: zod.number().optional(),
  token: zod.string().optional(),
  cost_auto: zod.boolean().optional(),
  parameters: zod
    .object({
      keyword: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      cost: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      currency: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      external_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      creative_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      ad_campaign_id: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      source: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_1: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_2: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_3: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_4: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_5: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_6: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_7: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_8: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_9: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_10: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_11: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_12: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_13: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_14: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
      sub_id_15: zod
        .object({
          name: zod.string().optional(),
          placeholder: zod.string().optional(),
          alias: zod.string().optional(),
        })
        .optional(),
    })
    .optional(),
  postbacks: zod
    .array(
      zod.object({
        campaign_id: zod.number().optional().describe('Campaign ID'),
        id: zod.number().optional().describe('Postback ID'),
        method: zod.enum(['GET', 'POST']).optional().describe('Request method'),
        statuses: zod
          .array(zod.enum(['lead', 'sale', 'rejected', 'rebill']))
          .optional()
          .describe('Conversion status'),
        url: zod.string().optional().describe('Postback URL'),
      })
    )
    .optional(),
  notes: zod.string().optional(),
  created_at: zod.string().optional(),
  updated_at: zod.string().optional(),
});
export const getCampaignsDeletedResponse = zod.array(
  getCampaignsDeletedResponseItem
);
